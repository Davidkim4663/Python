"""
 데이터 자료 : 
 리터럴 - 정수, 실수, 문자열, 불리언, [리스트], (튜플), {딕셔너리}
 변수 - 하나의 자료를 저장하는 메모리 공가
 [] : a = [3, 3.14, True, '사과'] a 변수에 리스트 자료 1개
 () : a = (value1 : 3, value2 : 3.14) a 변수에 튜플 자료 1개
 {} : a = {value1 : 3, value2 : 3.14} a 변수에 딕셔너라 자료 1개

 리스트 함수
  > append()
  > insert()
  > remove()
  > pop()
  > sort()
  > reverse()
  > index()
  > count()
  > extend()
"""

#  튜플
"""
 튜플과 리스트는 유사하나 튜픙은 선언 및 생성 이후 수정과 삭제가 불가능하다.
 실제 현업에서는 여러 사람들이 개발을 하기 때문에 자료들에 대한 접근제한을 시키는데
 실수로 인해 중요한 자료들을 수정을 시키면 안되기 때문이다.
 
 * 관례적으로 목록을 수정 및 삭제가 많으면 리스트를 사용하고 없으면 튜플을 사용한다. 

"""
# 튜플 형태
t1 = ()
print("t1 = ", t1)

t2 = (10, ) # 요소 내에 값을 하나만 가질 때는 쉼표를 붙인다.
print("t2 = ", t2)

t3 = (10, 20, 30) #리스트와 비슷하게 여러 자료들을 넣을 때 쉼표로 구분한다.
print("t3 = ", t3)

# swap : (변수1, 변수2) = (변수2, 변수1)
t4 = (10, 20, (30, 40))
print("t4 = ", t4)

# 튜플 요소 수정 및 삭제
# t4[0] = 20
# # del t4[0] ->> 오류발생
# print(t4)

# 튜플 인덱싱, 슬라이스
# print(t4[0 : 2])
t6 = (1, 2)
t7 = (3, 4)
# sum = t6[0] + t7[1]
# print(sum)
t8 = t6 + t7
# 새로운 튜플을 생성 후 반환
print(t8)