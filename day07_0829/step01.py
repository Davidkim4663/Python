# 리스트 0829
"""
데이터 자료 :
리터럴 - 정수, 실수, 문자열, 불리언, [리스트], (튜플), {딕셔너리}
타입 - 리터럴들의 종류/분류
변수 
  - 하나의 자료를 저장하는 메모리 공간
    a = 3
    a = 3.14
    a = true
    a = "str"
    a = [3, 3.14, True, '사과'] a 변수에 리스트 자료 1개
    a = ( value1 : 3, value2 : 3.14) a 변수에 튜플 자료 1개 # 튜플 안에는 4개의 자료가 있다
    a = ( value1 : 3, value2 : 3.14) a 변수에 딕셔너리 자료 1개 # 그 딕셔너리 안에는 2개의 자료가 있다.

 - 리스트 타입 :
     >> 여러 개의 자료들을 하나의 자료들을 묶음 - ex) 쇼핑백
     >> 자료들을(쉼표,콤마)로 구분하고 [] 감싼 형식
     - [data1, data2]
     >> 인덱스 : 여러자료들이 저장된 순서번호(방 번호)
        why?? 여러자료들의 중복이 존재할 수 있다. (자료의 번호)
     >>
      리스트 선언
       변수명 - [ 자료1, 자료2, 자료3]
      리스트 내 요소 값 호출
       변수명 [인덱스]

      >>
        리스트 함수
        - append(), insert(), remove(), pop(), sort(), reverse(), index(), count(), extend()
       
      >>
        반복문과 리스트의 관계 : 리스트는 인덱스가 항상 0부터 1씩 증가하면서 사용 됨

      >>
        이차원 리스트(************) 행/열
        [
            [요소1],[요소1],
            [요소1][요소1],
            [요소1][요소1]
                             ] 3행 2열

"""
# 튜플
"""
 튜플()은 리스트[]와 유사하나 
 선언 생성 이후 수정과 삭제가 불가능 하다.(불변성의 법칙)
  
  * 현업에서는 여러 사람이 개발을 하기 때문에 자료들에 대해 접근제한
    실수 또는 아무나 중요한 자료를 변형 시키면 안되기 때문에
    관례적으로 목록을 수정 및 삭제가 많으면 리스트를 사용하고
    없으면 튜플을 사용한다.

"""

# [1] 튜플 형태
t1 = () # 요소가 없는 튜플 타입 (basic type)
t2 = (10, ) # 주의 할점 : 튜플 내 요소 1개만을 가질 때는 요소 뒤에(쉼표) 붙인다
t3 = (10, 20, 30) # 리스트와 비슷하게 여러 자료들을 넣을 때 쉽표로 구분한다.
t4 = 10, 20, 30
# swap : (변수1, 변수 2) = (변수2, 변수1)
t5 = (10, 20, (30, 40))
print(t5)

# [2] 튜플 요소 삭제 및 수정(불가 X)
# t4[0] = 20 # 튜플의 첫번째의 값 수정 # 오류 발생
# del t4[0] # t4 튜플의 첫번째 인덱스 요소 삭제

# [3] 튜플 인덱싱, 슬라이스
# 1. 인덱싱
print(t4[0])
print(t4[2])
# 2. 슬라이싱
print(t4[ 1 : ])
# 3. 연산
t6 = (1, 2)
t7 = (3, 4)
t8 = t6 + t7 # 새로운 튜플 생성 후 반환
print(t8)

# 4. 리터럴은 '불변성'이다.
print('a' + 'b')

#  튜플의 길이
print(len(t8))




























